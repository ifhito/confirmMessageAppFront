{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nfunction accessOauth() {\n  return React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"\\u9023\\u643A\\u30A2\\u30D7\\u30EA\\u8A8D\\u8A3C\");\n}\n\nfunction textInput() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: this.state.name,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Message:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: this.state.value,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Count:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"count\",\n    value: this.state.value,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}\n\nfunction App() {\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        flag = _useState8[0],\n        setFlag = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userData = _useState10[0],\n        setUserData = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        data = _useState12[0],\n        setData = _useState12[1]; //webSocketとの通信\n\n\n  const ws = new WebSocket('ws://localhost:5000/pipe'); // レンダー前にwsがopenした後にurl内のverifierを返す\n\n  useEffect(() => {\n    ws.onopen = event => {\n      if (userData == false && window.location.search.includes('verifier')) {\n        console.log('useEffect');\n        setFlag(true);\n        console.log(typeof getParam('oauth_token'));\n        const envelope = {\n          oauth_token: getParam('oauth_token'),\n          oauth_verifier: getParam('oauth_verifier')\n        }; //サーバへ送信\n\n        ws.send(JSON.stringify(envelope));\n      }\n    };\n\n    setUserData('true');\n  }); //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  } // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n\n  console.log(flag); //レンダー要素の切替\n\n  let render = flag ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, data) : React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u9023\\u643A\\u30A2\\u30D7\\u30EA\\u8A8D\\u8A3C\");\n  return React.createElement(React.Fragment, null, render);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useForm","accessOauth","handleClick","textInput","name","setName","message","setMessage","count","setCount","state","handleChange","value","App","flag","setFlag","userData","setUserData","data","setData","ws","WebSocket","onopen","event","window","location","search","includes","console","log","getParam","envelope","oauth_token","oauth_verifier","send","JSON","stringify","url","href","replace","regex","RegExp","results","exec","decodeURIComponent","onmessage","e","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nfunction accessOauth() {\n  return <button onClick={handleClick}>連携アプリ認証</button>;\n}\n\nfunction textInput() {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  return (\n    <form>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n      </label>\n      <label>\n        Message:\n        <input\n          type=\"text\"\n          name=\"message\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </label>\n      <label>\n        Count:\n        <input\n          type=\"text\"\n          name=\"count\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  //webSocketとの通信\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  // レンダー前にwsがopenした後にurl内のverifierを返す\n  useEffect(() => {\n    ws.onopen = event => {\n      if (userData == false && window.location.search.includes('verifier')) {\n        console.log('useEffect');\n        setFlag(true);\n        console.log(typeof getParam('oauth_token'));\n        const envelope = {\n          oauth_token: getParam('oauth_token'),\n          oauth_verifier: getParam('oauth_verifier')\n        };\n        //サーバへ送信\n        ws.send(JSON.stringify(envelope));\n      }\n    };\n    setUserData('true');\n  });\n\n  //url無いの特定の要素を持ってくるためのコード(コピペ)\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n  console.log(flag);\n\n  //レンダー要素の切替\n  let render = flag ? (\n    <div>{data}</div>\n  ) : (\n    <button onClick={handleClick}>連携アプリ認証</button>\n  );\n  return <>{render}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}