{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/AppTest.js\";\nimport React from 'react';\nimport './css/style.css';\nimport { useState, useEffect, useContext, createContext, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport useReactRouter from 'use-react-router';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\nconst url = 'http://0.0.0.0:5000';\n\nconst TwitterInputForm = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        greetingStatus = _useState10[0],\n        displayGreeting = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        id = _useState12[0],\n        setId = _useState12[1];\n\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  useEffect(async () => {\n    const userId = getParam('Id');\n    setId(String(userId));\n    console.log(userId);\n    const params = {\n      id: userId\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/get_name', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setName(res.data.name);\n  }, [setName, setId]);\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  }); //   const confirms = () => {\n  //     if (count == '') {\n  //       setError('空です。入力してください');\n  //       displayGreeting(false);\n  //     } else {\n  //       setError('');\n  //       displayGreeting(true);\n  //     }\n  //   };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  }; //   const confirmCount = () => {\n  //     if (count == '') {\n  //       setError('入力してください');\n  //     } else {\n  //       displayGreeting(true);\n  //     }\n  //   };\n\n\n  const handleSubmit = async event => {\n    if (message == '' || count == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const params = {\n        id: id,\n        type: 'Twiiter',\n        message: message,\n        count: count\n      };\n      console.log(id);\n\n      try {\n        let res = await axios.get('http://0.0.0.0:5000' + '/push_data', {\n          params\n        });\n        window.location.href = res.data;\n        console.log('OK');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"vertificationDocuments foldtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"verification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u627F\\u8A8D\\u8A3C\"), React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"nameTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u540D\\u524D\"), React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"messageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"textarea\", {\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"vertificationNum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"messageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\u4F55\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u6B32\\u3057\\u3044\\u304B\\uFF1F\"), React.createElement(\"input\", {\n    className: \"vertificationNumber\",\n    value: count,\n    onChange: handleChange,\n    type: \"number\",\n    name: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    class: \"TwitterButton\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u6C7A\\u5B9A\")));\n}; //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        userData = _useState14[0],\n        setUserData = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        data = _useState16[0],\n        setData = _useState16[1]; // const pages = [\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightpink' }}>\n  //       A\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightblue' }}>\n  //       B\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightgreen' }}>\n  //       C\n  //     </animated.div>\n  //   )\n  // ];\n  // const [index, set] = useState(0);\n  // const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  // const transitions = useTransition(index, p => p, {\n  //   from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n  //   enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n  //   leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\n  // });\n  // const Text = ({ children, offset, pos, start, end }) => {\n  //   const [transform] = useState(() =>\n  //     offset\n  //       .interpolate({\n  //         range: [start, end],\n  //         output: [100, 0],\n  //         extrapolate: 'clamp'\n  //       })\n  //       .interpolate(s => `translate3d(${s}px,0,0)`)\n  //   );\n  //   const [opacity] = useState(() => offset.interpolate([start, end], [0, 1]));\n  //   return (\n  //     <a.div\n  //       style={{\n  //         position: 'absolute',\n  //         left: 0,\n  //         top: `${pos * 100}vh`,\n  //         transform,\n  //         opacity\n  //       }}\n  //     >\n  //       {children}\n  //     </a.div>\n  //   );\n  // };\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  //   ws.onmessage = e => {\n  //     console.log(e);\n  //     if (e.data.includes('oauth_token')) {\n  //       window.location.href = e.data;\n  //     } else {\n  //       console.log(e);\n  //       setData(e.data);\n  //     }\n  //   };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  const handleClick = async () => {\n    try {\n      let res = await axios.get(url + '/oath');\n      window.location.href = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"vertificationDocuments foldtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"verification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Twitter\\u78BA\\u304B\\u3081\\u3063\\u305F\\u30FC\"), React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"\\u3053\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306FTwitter\\u306E\\u767A\\u8A00\\u3092\\u3057\\u3066\\u3082\\u3044\\u3044\\u304B\\u3001\\u53CB\\u9054\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3046\\u30A2\\u30D7\\u30EA\\u3067\\u3059\\u3002\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"\\u30A2\\u30D7\\u30EA\\u306E\\u4F7F\\u3044\\u65B9\\u306F\\u4EE5\\u4E0B\\u3067\\u3059\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\\u4E0B\\u306E\\u30A2\\u30A4\\u30B3\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066Twitter\\u306E\\u8A8D\\u8A3C\\u3092\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u4F55\\u4EBA\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3044\\u305F\\u3044\\u304B\\u3092\\u5165\\u529B\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"\\u5165\\u529B\\u5F8C\\u3001\\u30EA\\u30C0\\u30A4\\u30EC\\u30AF\\u30C8\\u3057\\u305F\\u30DA\\u30FC\\u30B8URL\\u3092\\u53CB\\u9054\\u306B\\u9001\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"\\u53CB\\u9054\\u304C\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u78BA\\u8A8D\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"\\u8A2D\\u5B9A\\u3057\\u305F\\u4EBA\\u6570\\u5206\\u306E\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u3082\\u3089\\u3044\\u6B21\\u7B2C\\u3001Twitter\\u306B\\u81EA\\u52D5\\u7684\\u306B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u9001\\u3089\\u308C\\u308B\"))), React.createElement(\"button\", {\n    className: \"TwitterButton\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\")));\n};\n\nconst Verificating = () => {\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        message = _useState18[0],\n        setMessage = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        name = _useState20[0],\n        setName = _useState20[1];\n\n  const _useState21 = useState(''),\n        _useState22 = _slicedToArray(_useState21, 2),\n        confirmNum = _useState22[0],\n        setConfirmNum = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        verificationNum = _useState24[0],\n        setVerificationNum = _useState24[1];\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        flag = _useState26[0],\n        setFlag = _useState26[1];\n\n  const axios = require('axios');\n\n  const url = 'http://localhost:5000';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/getData', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"\\u5B58\\u5728\\u3057\\u306A\\u3044\\u30DA\\u30FC\\u30B8\\u3067\\u3059\");\n    }\n\n    setName(res.data.name);\n    setMessage(res.data.message);\n    setConfirmNum(res.data.confirmNum);\n    setVerificationNum(res.data.verificationNum);\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n\n    try {\n      await axios.get(url + '/sub', {\n        params\n      });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (flag == false) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"vertificationDocuments foldtl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"verification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\\u8A3C\"), React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"nameTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"\\u540D\\u524D\"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      className: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, message), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))));\n  } else if (flag == true) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Thank you your corporation!! \"));\n  }\n};\n\nconst Verificated = () => {\n  const _useState27 = useState(''),\n        _useState28 = _slicedToArray(_useState27, 2),\n        message = _useState28[0],\n        setMessage = _useState28[1];\n\n  const _useState29 = useState(''),\n        _useState30 = _slicedToArray(_useState29, 2),\n        name = _useState30[0],\n        setName = _useState30[1];\n\n  const _useState31 = useState(''),\n        _useState32 = _slicedToArray(_useState31, 2),\n        confirmNum = _useState32[0],\n        setConfirmNum = _useState32[1];\n\n  const _useState33 = useState(''),\n        _useState34 = _slicedToArray(_useState33, 2),\n        verificationNum = _useState34[0],\n        setVerificationNum = _useState34[1];\n\n  const _useState35 = useState(false),\n        _useState36 = _slicedToArray(_useState35, 2),\n        flag = _useState36[0],\n        setFlag = _useState36[1];\n\n  const axios = require('axios');\n\n  const url = 'http://localhost:5000';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/getData', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"\\u5B58\\u5728\\u3057\\u306A\\u3044\\u30DA\\u30FC\\u30B8\\u3067\\u3059\");\n    }\n\n    setName(res.data.name);\n    setMessage(res.data.message);\n    setConfirmNum(res.data.confirmNum);\n    setVerificationNum(res.data.verificationNum);\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n\n    try {\n      await axios.get(url + '/sub', {\n        params\n      });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const copyToClipboard = () => {\n    // コピー対象をJavaScript上で変数として定義する\n    var copyTarget = document.getElementById('copyTarget'); // コピー対象のテキストを選択する\n\n    copyTarget.select(); // 選択しているテキストをクリップボードにコピーする\n\n    document.execCommand('Copy'); // コピーをお知らせする\n\n    alert('コピーできました！ : ' + copyTarget.value);\n  };\n\n  let items = [];\n  const num = Array.from(Array(confirmNum).keys());\n  const listItems = num.map(number => {\n    console.log(number);\n    console.log(confirmNum);\n\n    if (number < verificationNum) {\n      return React.createElement(\"div\", {\n        class: \"vertification-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"\\u627F\"));\n    } else {\n      return React.createElement(\"div\", {\n        class: \"vertification-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }));\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"vertificationg_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"vertificating_conect\",\n    value: 'http://localhost:3000/Verificating?' + Id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, \"\\u627F\\u8A8D\\u30DA\\u30FC\\u30B8\\u306EURL\\u3092\\u30B3\\u30D4\\u30FC\\u3059\\u308B\")), React.createElement(\"div\", {\n    className: \"vertificationDocuments foldtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"verification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"\\u627F\\u8A8D\\u8A3C\"), React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"nameTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"\\u540D\\u524D\"), React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"messageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, message), React.createElement(\"div\", {\n    className: \"vertificationTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"\\u627F\\u8A8D\\u4EBA\\u6570\"), React.createElement(\"div\", {\n    className: \"vertificationNum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, listItems))));\n};\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: AccessOauth,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/twitterForm\",\n    component: TwitterInputForm,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/verificated\",\n    component: Verificated,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/verificating\",\n    component: Verificating,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }))); //   const [flag, setFlag] = useState(false);\n  //   let render;\n  //   // if (window.location.search.includes('name')) {\n  //   //   render = <BottonContent />;\n  //   // }\n  //   // webSocketとの通信;\n  //   // レンダー前にwsがopenした後にurl内のverifierを返す;\n  //   if (window.location.search.includes('verifier')) {\n  //     render = <TwitterInputForm />;\n  //     //サーバへ送信\n  //     // ws.send(JSON.stringify(envelope));\n  //   } else if (\n  //     window.location.search.includes('name') &&\n  //     window.location.search.includes('time')\n  //   ) {\n  //     render = <BottonContent />;\n  //   } else {\n  //     render = <AccessOauth />;\n  //   }\n  //   // //レンダー要素の切替\n  //   // let render = flag ? <InputForm /> : <AccessOauth />;\n  //   return render;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/AppTest.js"],"names":["React","useState","useEffect","useContext","createContext","useCallback","BrowserRouter","Router","Route","Switch","useReactRouter","useSpring","useTransition","animated","a","axios","url","TwitterInputForm","props","name","setName","message","setMessage","count","setCount","error","setError","greetingStatus","displayGreeting","id","setId","contentProps","opacity","marginLeft","userId","getParam","String","console","log","params","res","get","data","contentProp","marginRight","handleChange","event","target","value","handleSubmit","preventDefault","type","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","AccessOauth","userData","setUserData","setData","handleClick","Verificating","confirmNum","setConfirmNum","verificationNum","setVerificationNum","flag","setFlag","require","Id","nameId","time","Verificated","copyToClipboard","copyTarget","document","getElementById","select","execCommand","alert","items","num","Array","from","keys","listItems","map","number","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/style.css';\nimport {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback\n} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport useReactRouter from 'use-react-router';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\n\nconst url = 'http://0.0.0.0:5000';\nconst TwitterInputForm = props => {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const [error, setError] = useState('');\n  const [greetingStatus, displayGreeting] = useState(false);\n  const [id, setId] = useState('');\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  useEffect(async () => {\n    const userId = getParam('Id');\n    setId(String(userId));\n    console.log(userId);\n    const params = {\n      id: userId\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/get_name', { params });\n    } catch (error) {\n      console.log(error);\n    }\n    setName(res.data.name);\n  }, [setName, setId]);\n\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n  //   const confirms = () => {\n  //     if (count == '') {\n  //       setError('空です。入力してください');\n  //       displayGreeting(false);\n  //     } else {\n  //       setError('');\n  //       displayGreeting(true);\n  //     }\n  //   };\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  //   const confirmCount = () => {\n  //     if (count == '') {\n  //       setError('入力してください');\n  //     } else {\n  //       displayGreeting(true);\n  //     }\n  //   };\n  const handleSubmit = async event => {\n    if (message == '' || count == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const params = {\n        id: id,\n        type: 'Twiiter',\n        message: message,\n        count: count\n      };\n      console.log(id);\n      try {\n        let res = await axios.get('http://0.0.0.0:5000' + '/push_data', {\n          params\n        });\n        window.location.href = res.data;\n        console.log('OK');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"vertificationDocuments foldtl\">\n        <h1 className=\"verification\">承認証</h1>\n        <div className=\"Container\">\n          <p className=\"nameTitle\">名前</p>\n          <div className=\"name\">{name}</div>\n          <p className=\"messageTitle\">メッセージ</p>\n          <textarea\n            name=\"message\"\n            value={message}\n            onChange={handleChange}\n          ></textarea>\n          <div className=\"vertificationNum\">\n            <p className=\"messageTitle\">何人に確認して欲しいか？</p>\n            <input\n              className=\"vertificationNumber\"\n              value={count}\n              onChange={handleChange}\n              type=\"number\"\n              name=\"count\"\n            />\n          </div>\n        </div>\n        <button class=\"TwitterButton\" onClick={handleSubmit}>\n          決定\n        </button>\n      </div>\n    </>\n  );\n};\n\n//url無いの特定の要素を持ってくるためのコード(コピペ)\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  // const pages = [\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightpink' }}>\n  //       A\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightblue' }}>\n  //       B\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightgreen' }}>\n  //       C\n  //     </animated.div>\n  //   )\n  // ];\n  // const [index, set] = useState(0);\n  // const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  // const transitions = useTransition(index, p => p, {\n  //   from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n  //   enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n  //   leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\n  // });\n  // const Text = ({ children, offset, pos, start, end }) => {\n  //   const [transform] = useState(() =>\n  //     offset\n  //       .interpolate({\n  //         range: [start, end],\n  //         output: [100, 0],\n  //         extrapolate: 'clamp'\n  //       })\n  //       .interpolate(s => `translate3d(${s}px,0,0)`)\n  //   );\n  //   const [opacity] = useState(() => offset.interpolate([start, end], [0, 1]));\n  //   return (\n  //     <a.div\n  //       style={{\n  //         position: 'absolute',\n  //         left: 0,\n  //         top: `${pos * 100}vh`,\n  //         transform,\n  //         opacity\n  //       }}\n  //     >\n  //       {children}\n  //     </a.div>\n  //   );\n  // };\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  //   ws.onmessage = e => {\n  //     console.log(e);\n  //     if (e.data.includes('oauth_token')) {\n  //       window.location.href = e.data;\n  //     } else {\n  //       console.log(e);\n  //       setData(e.data);\n  //     }\n  //   };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  const handleClick = async () => {\n    try {\n      let res = await axios.get(url + '/oath');\n      window.location.href = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <div className=\"vertificationDocuments foldtl\">\n        <h1 className=\"verification\">Twitter確かめったー</h1>\n        <div className=\"Container\">\n          <p>\n            このアプリケーションはTwitterの発言をしてもいいか、友達に確かめてもらうアプリです。\n          </p>\n          <p>アプリの使い方は以下です</p>\n          <ol>\n            <li>下のアイコンをクリックしてTwitterの認証をする</li>\n            <li>メッセージと何人に確かめてもらいたいかを入力する</li>\n            <li>入力後、リダイレクトしたページURLを友達に送る</li>\n            <li>友達がメッセージを確認する</li>\n            <li>\n              設定した人数分の人に確認してもらい次第、Twitterに自動的にメッセージが送られる\n            </li>\n          </ol>\n        </div>\n        <button className=\"TwitterButton\" onClick={handleClick}>\n          Twitter認証\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst Verificating = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [confirmNum, setConfirmNum] = useState('');\n  const [verificationNum, setVerificationNum] = useState('');\n  const [flag, setFlag] = useState(false);\n  const axios = require('axios');\n  const url = 'http://localhost:5000';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/getData', { params });\n    } catch (error) {\n      console.log(error);\n      return <div>存在しないページです</div>;\n    }\n    setName(res.data.name);\n    setMessage(res.data.message);\n    setConfirmNum(res.data.confirmNum);\n    setVerificationNum(res.data.verificationNum);\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n    try {\n      await axios.get(url + '/sub', { params });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (flag == false) {\n    return (\n      <>\n        <div className=\"vertificationDocuments foldtl\">\n          <h1 className=\"verification\">承認証</h1>\n          <div className=\"Container\">\n            <p className=\"nameTitle\">名前</p>\n            <div className=\"name\">{name}</div>\n            <p className=\"messageTitle\">メッセージ</p>\n            <div className=\"messages\">{message}</div>\n            <button></button>\n          </div>\n        </div>\n      </>\n    );\n  } else if (flag == true) {\n    return (\n      <>\n        <p>Thank you your corporation!! </p>\n      </>\n    );\n  }\n};\nconst Verificated = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [confirmNum, setConfirmNum] = useState('');\n  const [verificationNum, setVerificationNum] = useState('');\n  const [flag, setFlag] = useState(false);\n  const axios = require('axios');\n  const url = 'http://localhost:5000';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/getData', { params });\n    } catch (error) {\n      console.log(error);\n      return <div>存在しないページです</div>;\n    }\n    setName(res.data.name);\n    setMessage(res.data.message);\n    setConfirmNum(res.data.confirmNum);\n    setVerificationNum(res.data.verificationNum);\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n    try {\n      await axios.get(url + '/sub', { params });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const copyToClipboard = () => {\n    // コピー対象をJavaScript上で変数として定義する\n    var copyTarget = document.getElementById('copyTarget');\n\n    // コピー対象のテキストを選択する\n    copyTarget.select();\n\n    // 選択しているテキストをクリップボードにコピーする\n    document.execCommand('Copy');\n\n    // コピーをお知らせする\n    alert('コピーできました！ : ' + copyTarget.value);\n  };\n  let items = [];\n  const num = Array.from(Array(confirmNum).keys());\n  const listItems = num.map(number => {\n    console.log(number);\n    console.log(confirmNum);\n    if (number < verificationNum) {\n      return (\n        <div class=\"vertification-box\">\n          <div>承</div>\n        </div>\n      );\n    } else {\n      return (\n        <div class=\"vertification-box\">\n          <div></div>\n        </div>\n      );\n    }\n  });\n  return (\n    <>\n      <div className=\"vertificationg_wrapper\">\n        <button\n          id=\"vertificating_conect\"\n          value={'http://localhost:3000/Verificating?' + Id}\n        >\n          承認ページのURLをコピーする\n        </button>\n      </div>\n      <div className=\"vertificationDocuments foldtl\">\n        <h1 className=\"verification\">承認証</h1>\n        <div className=\"Container\">\n          <p className=\"nameTitle\">名前</p>\n          <div className=\"name\">{name}</div>\n          <p className=\"messageTitle\">メッセージ</p>\n          <div className=\"messages\">{message}</div>\n          <div className=\"vertificationTitle\">承認人数</div>\n          <div className=\"vertificationNum\">{listItems}</div>\n          {/* <button onClick={handleSubmit}>決定</button> */}\n        </div>\n      </div>\n    </>\n  );\n};\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={AccessOauth} exact />\n        <Route path=\"/twitterForm\" component={TwitterInputForm} exact />\n        <Route path=\"/verificated\" component={Verificated} exact />\n        <Route path=\"/verificating\" component={Verificating} exact />\n      </Switch>\n    </Router>\n  );\n  //   const [flag, setFlag] = useState(false);\n  //   let render;\n  //   // if (window.location.search.includes('name')) {\n  //   //   render = <BottonContent />;\n  //   // }\n  //   // webSocketとの通信;\n  //   // レンダー前にwsがopenした後にurl内のverifierを返す;\n  //   if (window.location.search.includes('verifier')) {\n  //     render = <TwitterInputForm />;\n  //     //サーバへ送信\n  //     // ws.send(JSON.stringify(envelope));\n  //   } else if (\n  //     window.location.search.includes('name') &&\n  //     window.location.search.includes('time')\n  //   ) {\n  //     render = <BottonContent />;\n  //   } else {\n  //     render = <AccessOauth />;\n  //   }\n\n  //   // //レンダー要素の切替\n  //   // let render = flag ? <InputForm /> : <AccessOauth />;\n  //   return render;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}