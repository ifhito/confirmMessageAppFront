{"ast":null,"code":"var _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nexport default function App() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"example\",\n    defaultValue: \"test\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"exampleRequired\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), errors.exampleRequired && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"This field is required\"), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useForm","App","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,mBACsBD,OAAO,EAD7B;AAAA,QACpBE,QADoB,YACpBA,QADoB;AAAA,QACVC,YADU,YACVA,YADU;AAAA,QACIC,KADJ,YACIA,KADJ;AAAA,QACWC,MADX,YACWA,MADX;;AAE5B,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAN4B,CAMG;;AAE/B,SACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,YAAY,EAAC,MAAnC;AAA0C,IAAA,GAAG,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOGL,MAAM,CAACM,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAP7B,EASE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport default function App() {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input name=\"example\" defaultValue=\"test\" ref={register} />\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <input name=\"exampleRequired\" ref={register({ required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}