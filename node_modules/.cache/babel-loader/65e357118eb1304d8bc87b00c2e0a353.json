{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/twitter_front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/twitter_front/src/Verificated.js\";\nimport React from 'react';\nimport './css/style.css';\nimport { useState, useEffect, useContext, createContext, useCallback } from 'react';\nimport axios from 'axios';\nimport approvalIcon from './image/approval-icon.png';\nconst url = 'https://stormy-bayou-25730.herokuapp.com';\n\nconst Verificated = props => {\n  const getParam = props.getParam;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmNum = _useState6[0],\n        setConfirmNum = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        verificationNum = _useState8[0],\n        setVerificationNum = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        flag = _useState10[0],\n        setFlag = _useState10[1];\n\n  const _useState11 = useState('承認ページのURLをコピーする'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        verificationText = _useState12[0],\n        setVerificationText = _useState12[1];\n\n  const url = 'https://stormy-bayou-25730.herokuapp.com';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/getData', {\n        params\n      });\n      setName(res.data.name);\n      setMessage(res.data.message);\n      setConfirmNum(res.data.confirmNum);\n      setVerificationNum(res.data.verificationNum);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n\n  const copyToClipboard = () => {\n    let element = document.getElementById('vertificatingConect');\n    const text = document.createElement('textarea');\n    text.classList.add('hidden');\n    text.value = element.value;\n    document.body.appendChild(text);\n    text.select();\n    document.execCommand('copy');\n    text.remove();\n    setVerificationText('コピーできました');\n  };\n\n  let items = [];\n  const num = Array.from(Array(confirmNum).keys());\n  const listItems = num.map(number => {\n    console.log(number);\n    console.log(confirmNum);\n\n    if (number < verificationNum) {\n      return React.createElement(\"div\", {\n        className: \"vertificationBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"approvalIcon\",\n        src: approvalIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"vertificationBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  });\n\n  if (name == '') {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u9001\\u4FE1\\u3055\\u308C\\u307E\\u3057\\u305F\");\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"vertificatingWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"vertificatingConect\",\n      value: 'https://adoring-dubinsky-d79ae4.netlify.com/Verificating?Id=' + Id,\n      onClick: copyToClipboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, verificationText)), React.createElement(\"div\", {\n      className: \"vertificationDocuments foldtl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"verification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\\u8A3C\"), React.createElement(\"p\", {\n      className: \"nameTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u540D\\u524D\"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      className: \"messageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, message), React.createElement(\"div\", {\n      className: \"vertificationTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\\u4EBA\\u6570\"), React.createElement(\"div\", {\n      className: \"vertificationNum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, listItems))));\n  }\n};\n\nexport default Verificated;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/twitter_front/src/Verificated.js"],"names":["React","useState","useEffect","useContext","createContext","useCallback","axios","approvalIcon","url","Verificated","props","getParam","message","setMessage","name","setName","confirmNum","setConfirmNum","verificationNum","setVerificationNum","flag","setFlag","verificationText","setVerificationText","Id","params","console","log","res","get","data","error","copyToClipboard","element","document","getElementById","text","createElement","classList","add","value","body","appendChild","select","execCommand","remove","items","num","Array","from","keys","listItems","map","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,OANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,MAAMC,GAAG,GAAG,0CAAZ;;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;;AAD2B,oBAEGV,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEpBW,OAFoB;AAAA,QAEXC,UAFW;;AAAA,qBAGHZ,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,QAGpBa,IAHoB;AAAA,QAGdC,OAHc;;AAAA,qBAISd,QAAQ,CAAC,EAAD,CAJjB;AAAA;AAAA,QAIpBe,UAJoB;AAAA,QAIRC,aAJQ;;AAAA,qBAKmBhB,QAAQ,CAAC,EAAD,CAL3B;AAAA;AAAA,QAKpBiB,eALoB;AAAA,QAKHC,kBALG;;AAAA,qBAMHlB,QAAQ,CAAC,KAAD,CANL;AAAA;AAAA,QAMpBmB,IANoB;AAAA,QAMdC,OANc;;AAAA,sBAOqBpB,QAAQ,CACtD,iBADsD,CAP7B;AAAA;AAAA,QAOpBqB,gBAPoB;AAAA,QAOFC,mBAPE;;AAU3B,QAAMf,GAAG,GAAG,0CAAZ;AACA,MAAIgB,EAAE,GAAGb,QAAQ,CAAC,IAAD,CAAjB;AACAT,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMuB,MAAM,GAAG;AACbD,MAAAA,EAAE,EAAEA;AADS,KAAf;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAIG,GAAJ;;AACA,QAAI;AACFA,MAAAA,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAUrB,GAAG,GAAG,UAAhB,EAA4B;AAAEiB,QAAAA;AAAF,OAA5B,CAAZ;AACAV,MAAAA,OAAO,CAACa,GAAG,CAACE,IAAJ,CAAShB,IAAV,CAAP;AACAD,MAAAA,UAAU,CAACe,GAAG,CAACE,IAAJ,CAASlB,OAAV,CAAV;AACAK,MAAAA,aAAa,CAACW,GAAG,CAACE,IAAJ,CAASd,UAAV,CAAb;AACAG,MAAAA,kBAAkB,CAACS,GAAG,CAACE,IAAJ,CAASZ,eAAV,CAAlB;AACD,KAND,CAME,OAAOa,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,GAfQ,EAeN,CAAClB,UAAD,EAAaE,OAAb,EAAsBE,aAAtB,EAAqCE,kBAArC,CAfM,CAAT;;AAgBA,QAAMa,eAAe,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAd;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAAb;AACAD,IAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACAH,IAAAA,IAAI,CAACI,KAAL,GAAaP,OAAO,CAACO,KAArB;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,IAAAA,IAAI,CAACO,MAAL;AACAT,IAAAA,QAAQ,CAACU,WAAT,CAAqB,MAArB;AACAR,IAAAA,IAAI,CAACS,MAAL;AACAtB,IAAAA,mBAAmB,CAAC,UAAD,CAAnB;AACD,GAVD;;AAWA,MAAIuB,KAAK,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAChC,UAAD,CAAL,CAAkBkC,IAAlB,EAAX,CAAZ;AACA,QAAMC,SAAS,GAAGJ,GAAG,CAACK,GAAJ,CAAQC,MAAM,IAAI;AAClC3B,IAAAA,OAAO,CAACC,GAAR,CAAY0B,MAAZ;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;;AACA,QAAIqC,MAAM,GAAGnC,eAAb,EAA8B;AAC5B,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEX,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO;AACL,aAAO;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAZiB,CAAlB;;AAaA,MAAIO,IAAI,IAAI,EAAZ,EAAgB;AACd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAAP;AACD,GAFD,MAEO;AACL,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EACH,iEACAU,EAJJ;AAME,MAAA,OAAO,EAAEQ,eANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGV,gBARH,CADF,CADF,EAcE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBR,IAAvB,CAHF,EAIE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,EAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BF,OAA3B,CALF,EAME;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANF,EAOE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCuC,SAAnC,CAPF,CADF,CAdF,CADF;AAuCD;AACF,CAjGD;;AAmGA,eAAe1C,WAAf","sourcesContent":["import React from 'react';\nimport './css/style.css';\nimport {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback\n} from 'react';\nimport axios from 'axios';\nimport approvalIcon from './image/approval-icon.png';\nconst url = 'https://stormy-bayou-25730.herokuapp.com';\nconst Verificated = props => {\n  const getParam = props.getParam;\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [confirmNum, setConfirmNum] = useState('');\n  const [verificationNum, setVerificationNum] = useState('');\n  const [flag, setFlag] = useState(false);\n  const [verificationText, setVerificationText] = useState(\n    '承認ページのURLをコピーする'\n  );\n  const url = 'https://stormy-bayou-25730.herokuapp.com';\n  let Id = getParam('Id');\n  useEffect(async () => {\n    const params = {\n      Id: Id\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/getData', { params });\n      setName(res.data.name);\n      setMessage(res.data.message);\n      setConfirmNum(res.data.confirmNum);\n      setVerificationNum(res.data.verificationNum);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [setMessage, setName, setConfirmNum, setVerificationNum]);\n  const copyToClipboard = () => {\n    let element = document.getElementById('vertificatingConect');\n    const text = document.createElement('textarea');\n    text.classList.add('hidden');\n    text.value = element.value;\n    document.body.appendChild(text);\n    text.select();\n    document.execCommand('copy');\n    text.remove();\n    setVerificationText('コピーできました');\n  };\n  let items = [];\n  const num = Array.from(Array(confirmNum).keys());\n  const listItems = num.map(number => {\n    console.log(number);\n    console.log(confirmNum);\n    if (number < verificationNum) {\n      return (\n        <div className=\"vertificationBox\">\n          <img className=\"approvalIcon\" src={approvalIcon} />\n        </div>\n      );\n    } else {\n      return <div className=\"vertificationBox\"></div>;\n    }\n  });\n  if (name == '') {\n    return <div>メッセージは送信されました</div>;\n  } else {\n    return (\n      <>\n        <div className=\"vertificatingWrapper\">\n          <button\n            id=\"vertificatingConect\"\n            value={\n              'https://adoring-dubinsky-d79ae4.netlify.com/Verificating?Id=' +\n              Id\n            }\n            onClick={copyToClipboard}\n          >\n            {verificationText}\n          </button>\n        </div>\n\n        <div className=\"vertificationDocuments foldtl\">\n          <div className=\"Container\">\n            <h1 className=\"verification\">承認証</h1>\n            <p className=\"nameTitle\">名前</p>\n            <div className=\"name\">{name}</div>\n            <p className=\"messageTitle\">メッセージ</p>\n            <div className=\"messages\">{message}</div>\n            <div className=\"vertificationTitle\">承認人数</div>\n            <div className=\"vertificationNum\">{listItems}</div>\n            {/* <div className=\"Container\">\n            <h1 className=\"verification\">承認証</h1>\n            <p className=\"nameTitle\">名前</p>\n            <div className=\"name\">{name}</div>\n            <p className=\"messageTitle\">メッセージ</p>\n            <div className=\"messages\">{message}</div>\n            <div className=\"vertificationWrapper\">\n              <div className=\"vertificationTitle\">承認人数</div>\n              <div className=\"vertificationNum\">{listItems}</div>\n            </div>\n          </div> */}\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Verificated;\n"]},"metadata":{},"sourceType":"module"}