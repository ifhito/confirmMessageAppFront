{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport axios from 'axios';\n\nconst InputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data == 'error') {\n      setError('この名前は登録されています');\n    } else if (e.data.includes('name')) {\n      let url = window.location.href;\n      window.location.href = url.split('?')[0] + e.data;\n    }\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const envelope = {\n      name: name,\n      message: message,\n      count: count,\n      oauth_token: getParam('oauth_token'),\n      oauth_verifier: getParam('oauth_verifier')\n    };\n    ws.send(JSON.stringify(envelope));\n    console.log(name);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Message:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Count:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"count\",\n    value: count,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, error));\n}; //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userData = _useState10[0],\n        setUserData = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        data = _useState12[0],\n        setData = _useState12[1]; // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\"));\n};\n\nconst BottonContent = () => {\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        message = _useState14[0],\n        setMessage = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        name = _useState16[0],\n        setName = _useState16[1];\n\n  const axios = require('axios');\n\n  const url = 'http://localhost:5000/getData';\n  let flag = false;\n  const params = {\n    name: getParam('name'),\n    time: getParam('get')\n  };\n  useEffect(async () => {\n    try {\n      const res = await axios.get(url, params);\n      const items = res.data;\n      console.log(res); // setName(items.name);\n      // setMessage(items.message);\n    } catch (error) {\n      const _error$response = error.response,\n            status = _error$response.status,\n            statusText = _error$response.statusText;\n      console.log(`Error! HTTP Status: ${status} ${statusText}`);\n    }\n  });\n\n  const handleClick = async () => {\n    console.log('rest');\n    axios.post('/sub', {\n      nameId: getParam('name'),\n      time: getParam('time')\n    });\n    flag = true;\n  };\n\n  if (flag == false) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, message), React.createElement(\"button\", {\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\"));\n  } else if (flag == true) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Thank you your corporation!! \"));\n  }\n};\n\nfunction App() {\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        flag = _useState18[0],\n        setFlag = _useState18[1];\n\n  let render; // if (window.location.search.includes('name')) {\n  //   render = <BottonContent />;\n  // }\n  // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n\n  if (window.location.search.includes('verifier')) {\n    render = React.createElement(InputForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }); //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  } else if (window.location.search.includes('name') && window.location.search.includes('time')) {\n    render = React.createElement(BottonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    });\n  } else {\n    render = React.createElement(AccessOauth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  } // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n\n\n  return render;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useContext","createContext","axios","InputForm","ws","WebSocket","name","setName","message","setMessage","count","setCount","error","setError","onmessage","e","console","log","data","includes","url","window","location","href","split","handleChange","event","target","value","handleSubmit","preventDefault","envelope","oauth_token","getParam","oauth_verifier","send","JSON","stringify","replace","regex","RegExp","results","exec","decodeURIComponent","AccessOauth","userData","setUserData","setData","handleClick","BottonContent","require","flag","params","time","res","get","items","response","status","statusText","post","nameId","App","setFlag","render","search"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport axios from 'axios';\nconst InputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const [error, setError] = useState('');\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data == 'error') {\n      setError('この名前は登録されています');\n    } else if (e.data.includes('name')) {\n      let url = window.location.href;\n      window.location.href = url.split('?')[0] + e.data;\n    }\n  };\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const envelope = {\n      name: name,\n      message: message,\n      count: count,\n      oauth_token: getParam('oauth_token'),\n      oauth_verifier: getParam('oauth_verifier')\n    };\n    ws.send(JSON.stringify(envelope));\n    console.log(name);\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Message:\n          <input\n            type=\"text\"\n            name=\"message\"\n            value={message}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Count:\n          <input\n            type=\"text\"\n            name=\"count\"\n            value={count}\n            onChange={handleChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <div>{error}</div>\n    </>\n  );\n};\n\n//url無いの特定の要素を持ってくるためのコード(コピペ)\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n  return (\n    <>\n      <button onClick={handleClick}>Twitter認証</button>\n    </>\n  );\n};\n\nconst BottonContent = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const axios = require('axios');\n  const url = 'http://localhost:5000/getData';\n  let flag = false;\n  const params = {\n    name: getParam('name'),\n    time: getParam('get')\n  };\n  useEffect(async () => {\n    try {\n      const res = await axios.get(url, params);\n      const items = res.data;\n      console.log(res);\n      // setName(items.name);\n      // setMessage(items.message);\n    } catch (error) {\n      const { status, statusText } = error.response;\n      console.log(`Error! HTTP Status: ${status} ${statusText}`);\n    }\n  });\n  const handleClick = async () => {\n    console.log('rest');\n    axios.post('/sub', {\n      nameId: getParam('name'),\n      time: getParam('time')\n    });\n    flag = true;\n  };\n  if (flag == false) {\n    return (\n      <>\n        <p>{name}</p>\n        <p>{message}</p>\n        <button onClick={handleClick}>承認</button>\n      </>\n    );\n  } else if (flag == true) {\n    return (\n      <>\n        <p>Thank you your corporation!! </p>\n      </>\n    );\n  }\n};\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  let render;\n  // if (window.location.search.includes('name')) {\n  //   render = <BottonContent />;\n  // }\n  // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n  if (window.location.search.includes('verifier')) {\n    render = <InputForm />;\n    //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  } else if (\n    window.location.search.includes('name') &&\n    window.location.search.includes('time')\n  ) {\n    render = <BottonContent />;\n  } else {\n    render = <AccessOauth />;\n  }\n\n  // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n  return render;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}