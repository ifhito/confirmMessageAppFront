{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react'; // const accessOauth = () => {\n//   return <button onClick={handleClick}>連携アプリ認証</button>;\n// };\n\nconst InputForm = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setMessage(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(name);\n    console.log(pass);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: datas.handleSubmit(datas.onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    ref: datas.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Message:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    ref: datas.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Count:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"count\",\n    ref: datas.register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n\n  return React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\");\n};\n\nfunction App() {\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        flag = _useState8[0],\n        setFlag = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userData = _useState10[0],\n        setUserData = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        data = _useState12[0],\n        setData = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        name = _useState14[0],\n        setName = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        message = _useState16[0],\n        setMessage = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        count = _useState18[0],\n        setCount = _useState18[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; //webSocketとの通信\n  // レンダー前にwsがopenした後にurl内のverifierを返す\n  // useEffect(() => {\n  //   ws.onopen = event => {\n  //     if (userData == false && window.location.search.includes('verifier')) {\n  //       console.log('useEffect');\n  //       setFlag(true);\n  //       console.log(typeof getParam('oauth_token'));\n  //       const envelope = {\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       //サーバへ送信\n  //       ws.send(JSON.stringify(envelope));\n  //     }\n  //   };\n  //   setUserData('true');\n  // });\n  //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  } // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  console.log(flag); //レンダー要素の切替\n\n  let render = flag ? React.createElement(TextInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }) : React.createElement(AccessOauth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useContext","createContext","InputForm","name","setName","message","setMessage","count","setCount","handleChange","event","target","value","console","log","handleSubmit","preventDefault","pass","datas","onSubmit","register","AccessOauth","ws","WebSocket","handleClick","send","App","flag","setFlag","userData","setUserData","data","setData","useForm","getParam","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","onmessage","e","includes","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\n\n// const accessOauth = () => {\n//   return <button onClick={handleClick}>連携アプリ認証</button>;\n// };\nconst InputForm = () => {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setMessage(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(name);\n    console.log(pass);\n  };\n  return (\n    <form onSubmit={datas.handleSubmit(datas.onSubmit)}>\n      <label>\n        Name:\n        <input type=\"text\" name=\"name\" ref={datas.register} />\n      </label>\n      <label>\n        Message:\n        <input type=\"text\" name=\"message\" ref={datas.register} />\n      </label>\n      <label>\n        Count:\n        <input type=\"text\" name=\"count\" ref={datas.register} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n  return <button onClick={handleClick}>Twitter認証</button>;\n};\n\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  //webSocketとの通信\n  // レンダー前にwsがopenした後にurl内のverifierを返す\n  // useEffect(() => {\n  //   ws.onopen = event => {\n  //     if (userData == false && window.location.search.includes('verifier')) {\n  //       console.log('useEffect');\n  //       setFlag(true);\n  //       console.log(typeof getParam('oauth_token'));\n  //       const envelope = {\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       //サーバへ送信\n  //       ws.send(JSON.stringify(envelope));\n  //     }\n  //   };\n  //   setUserData('true');\n  // });\n\n  //url無いの特定の要素を持ってくるためのコード(コピペ)\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n  console.log(flag);\n\n  //レンダー要素の切替\n  let render = flag ? <TextInput /> : <AccessOauth />;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}