{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/twitter_front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/twitter_front/src/TwitterInputForm.js\";\nimport React from 'react';\nimport './css/style.css';\nimport { useState, useEffect, useContext, createContext, useCallback } from 'react';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\nconst url = 'https://stormy-bayou-25730.herokuapp.com';\n\nconst TwitterInputForm = props => {\n  const getParam = props.getParam;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        greetingStatus = _useState10[0],\n        displayGreeting = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        id = _useState12[0],\n        setId = _useState12[1];\n\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  useEffect(async () => {\n    const userId = getParam('Id');\n    setId(String(userId));\n    console.log(userId);\n    const params = {\n      id: userId\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/get_name', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setName(res.data.name);\n  }, [setId]);\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const handleSubmit = async event => {\n    if (message == '' || count == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const params = {\n        id: id,\n        type: 'Twiiter',\n        message: message,\n        count: count\n      };\n      console.log(id);\n\n      try {\n        let res = await axios.get(url + '/push_data', {\n          params\n        });\n        window.location.href = res.data;\n        console.log('OK');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"vertificationDocuments foldtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"verification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u627F\\u8A8D\\u8A3C\"), React.createElement(\"p\", {\n    className: \"nameTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\u540D\\u524D\"), React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"messageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), React.createElement(\"textarea\", {\n    className: \"messageTextArea\",\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"messageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\u4F55\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u6B32\\u3057\\u3044\\u304B\\uFF1F\"), React.createElement(\"input\", {\n    className: \"inputLayout\",\n    value: count,\n    onChange: handleChange,\n    type: \"number\",\n    name: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"TwitterButton\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"buttonText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u6C7A\\u5B9A\")))));\n};\n\nexport default TwitterInputForm;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/twitter_front/src/TwitterInputForm.js"],"names":["React","useState","useEffect","useContext","createContext","useCallback","useSpring","useTransition","animated","a","axios","url","TwitterInputForm","props","getParam","name","setName","message","setMessage","count","setCount","error","setError","greetingStatus","displayGreeting","id","setId","contentProps","opacity","marginLeft","userId","String","console","log","params","res","get","data","contentProp","marginRight","handleChange","event","target","value","handleSubmit","preventDefault","type","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/style.css';\nimport {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback\n} from 'react';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\nconst url = 'https://stormy-bayou-25730.herokuapp.com';\nconst TwitterInputForm = props => {\n  const { getParam } = props;\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const [error, setError] = useState('');\n  const [greetingStatus, displayGreeting] = useState(false);\n  const [id, setId] = useState('');\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  useEffect(async () => {\n    const userId = getParam('Id');\n    setId(String(userId));\n    console.log(userId);\n    const params = {\n      id: userId\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/get_name', { params });\n    } catch (error) {\n      console.log(error);\n    }\n    setName(res.data.name);\n  }, [setId]);\n\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const handleSubmit = async event => {\n    if (message == '' || count == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const params = {\n        id: id,\n        type: 'Twiiter',\n        message: message,\n        count: count\n      };\n      console.log(id);\n      try {\n        let res = await axios.get(url + '/push_data', {\n          params\n        });\n        window.location.href = res.data;\n        console.log('OK');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"vertificationDocuments foldtl\">\n        <div className=\"Container\">\n          <h1 className=\"verification\">承認証</h1>\n          <p className=\"nameTitle\">名前</p>\n          <div className=\"name\">{name}</div>\n          <p className=\"messageTitle\">メッセージ</p>\n          <textarea\n            className=\"messageTextArea\"\n            name=\"message\"\n            value={message}\n            onChange={handleChange}\n          ></textarea>\n          <p className=\"messageTitle\">何人に確認して欲しいか？</p>\n          <input\n            className=\"inputLayout\"\n            value={count}\n            onChange={handleChange}\n            type=\"number\"\n            name=\"count\"\n          />\n          <button className=\"TwitterButton\" onClick={handleSubmit}>\n            <span className=\"buttonText\">決定</span>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TwitterInputForm;\n"]},"metadata":{},"sourceType":"module"}