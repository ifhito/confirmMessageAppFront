{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react'; // const accessOauth = () => {\n//   return <button onClick={handleClick}>連携アプリ認証</button>;\n// };\n\nconst InputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  ws.onmessage = e => {\n    if (e.data == error) {\n      setError('この名前は登録されています');\n    }\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const handleSubmit = event => {\n    //url無いの特定の要素を持ってくるためのコード(コピペ)\n    const getParam = (name, url) => {\n      if (!url) url = window.location.href;\n      name = name.replace(/[\\[\\]]/g, '\\\\$&');\n      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n          results = regex.exec(url);\n      if (!results) return null;\n      if (!results[2]) return '';\n      return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    };\n\n    event.preventDefault();\n    const envelope = {\n      name: name,\n      message: message,\n      count: count,\n      oauth_token: getParam('oauth_token'),\n      oauth_verifier: getParam('oauth_verifier')\n    };\n    ws.send(JSON.stringify(envelope));\n    console.log(name);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Message:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Count:\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"count\",\n    value: count,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        userData = _useState8[0],\n        setUserData = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        data = _useState10[0],\n        setData = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        error = _useState12[0],\n        setError = _useState12[1]; // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, error));\n};\n\nfunction App() {\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        flag = _useState14[0],\n        setFlag = _useState14[1];\n\n  let render; // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n\n  if (window.location.search.includes('verifier')) {\n    render = React.createElement(InputForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }); //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  } // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n\n\n  return render;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useContext","createContext","InputForm","ws","WebSocket","name","setName","message","setMessage","count","setCount","onmessage","e","data","error","setError","handleChange","event","target","value","console","log","handleSubmit","getParam","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","preventDefault","envelope","oauth_token","oauth_verifier","send","JSON","stringify","AccessOauth","userData","setUserData","setData","includes","handleClick","App","flag","setFlag","render","search"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,aAA1C,QAA+D,OAA/D,C,CAEA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,0BAAd,CAAX;;AADsB,oBAEEN,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEfO,IAFe;AAAA,QAETC,OAFS;;AAAA,qBAGQR,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAGfS,OAHe;AAAA,QAGNC,UAHM;;AAAA,qBAIIV,QAAQ,CAAC,EAAD,CAJZ;AAAA;AAAA,QAIfW,KAJe;AAAA,QAIRC,QAJQ;;AAKtBP,EAAAA,EAAE,CAACQ,SAAH,GAAeC,CAAC,IAAI;AAClB,QAAIA,CAAC,CAACC,IAAF,IAAUC,KAAd,EAAqB;AACnBC,MAAAA,QAAQ,CAAC,eAAD,CAAR;AACD;AACF,GAJD;;AAKA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,YAAQA,KAAK,CAACC,MAAN,CAAab,IAArB;AACE,WAAK,MAAL;AACEC,QAAAA,OAAO,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACA;;AACF,WAAK,SAAL;AACEX,QAAAA,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACA;;AACF,WAAK,OAAL;AACET,QAAAA,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACA;;AACF;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAXJ;AAaD,GAdD;;AAeA,QAAMC,YAAY,GAAGL,KAAK,IAAI;AAC5B;AACA,UAAMM,QAAQ,GAAG,CAAClB,IAAD,EAAOmB,GAAP,KAAe;AAC9B,UAAI,CAACA,GAAL,EAAUA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACVtB,MAAAA,IAAI,GAAGA,IAAI,CAACuB,OAAL,CAAa,SAAb,EAAwB,MAAxB,CAAP;AACA,UAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,SAASzB,IAAT,GAAgB,mBAA3B,CAAZ;AAAA,UACE0B,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWR,GAAX,CADZ;AAEA,UAAI,CAACO,OAAL,EAAc,OAAO,IAAP;AACd,UAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB,OAAO,EAAP;AACjB,aAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACD,KARD;;AASAX,IAAAA,KAAK,CAACiB,cAAN;AACA,UAAMC,QAAQ,GAAG;AACf9B,MAAAA,IAAI,EAAEA,IADS;AAEfE,MAAAA,OAAO,EAAEA,OAFM;AAGfE,MAAAA,KAAK,EAAEA,KAHQ;AAIf2B,MAAAA,WAAW,EAAEb,QAAQ,CAAC,aAAD,CAJN;AAKfc,MAAAA,cAAc,EAAEd,QAAQ,CAAC,gBAAD;AALT,KAAjB;AAOApB,IAAAA,EAAE,CAACmC,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAR;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACD,GArBD;;AAsBA,SACE;AAAM,IAAA,QAAQ,EAAEiB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEjB,IAAtC;AAA4C,IAAA,QAAQ,EAAEW,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAET,OAHT;AAIE,IAAA,QAAQ,EAAES,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEP,KAAvC;AAA8C,IAAA,QAAQ,EAAEO,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,EAkBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD,CArED;;AAuEA,MAAMyB,WAAW,GAAG,MAAM;AACxB,QAAMtC,EAAE,GAAG,IAAIC,SAAJ,CAAc,0BAAd,CAAX;;AADwB,qBAEQN,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEjB4C,QAFiB;AAAA,QAEPC,WAFO;;AAAA,qBAGA7C,QAAQ,CAAC,EAAD,CAHR;AAAA;AAAA,QAGjBe,IAHiB;AAAA,QAGX+B,OAHW;;AAAA,sBAIE9C,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,QAIjBgB,KAJiB;AAAA,QAIVC,QAJU,mBAKxB;;;AACAZ,EAAAA,EAAE,CAACQ,SAAH,GAAeC,CAAC,IAAI;AAClBQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;;AACA,QAAIA,CAAC,CAACC,IAAF,CAAOgC,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AAClCpB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBf,CAAC,CAACC,IAAzB;AACD,KAFD,MAEO;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACAgC,MAAAA,OAAO,CAAChC,CAAC,CAACC,IAAH,CAAP;AACD;AACF,GARD,CANwB,CAexB;;;AACA,QAAMiC,WAAW,GAAG,MAAM;AACxB1B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAlB,IAAAA,EAAE,CAACmC,IAAH,CAAQ,SAAR;AACD,GAHD;;AAIA,SACE,0CACE;AAAQ,IAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMhC,KAAN,CAFF,CADF;AAMD,CA1BD;;AA4BA,SAASiC,GAAT,GAAe;AAAA,sBACWjD,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACNkD,IADM;AAAA,QACAC,OADA;;AAEb,MAAIC,MAAJ,CAFa,CAGb;AACA;;AACA,MAAIzB,MAAM,CAACC,QAAP,CAAgByB,MAAhB,CAAuBN,QAAvB,CAAgC,UAAhC,CAAJ,EAAiD;AAC/CK,IAAAA,MAAM,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,CAD+C,CAE/C;AACA;AACD,GATY,CAWb;AACA;;;AACA,SAAOA,MAAP;AACD;;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\n\n// const accessOauth = () => {\n//   return <button onClick={handleClick}>連携アプリ認証</button>;\n// };\nconst InputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  ws.onmessage = e => {\n    if (e.data == error) {\n      setError('この名前は登録されています');\n    }\n  };\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const handleSubmit = event => {\n    //url無いの特定の要素を持ってくるためのコード(コピペ)\n    const getParam = (name, url) => {\n      if (!url) url = window.location.href;\n      name = name.replace(/[\\[\\]]/g, '\\\\$&');\n      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n      if (!results) return null;\n      if (!results[2]) return '';\n      return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    };\n    event.preventDefault();\n    const envelope = {\n      name: name,\n      message: message,\n      count: count,\n      oauth_token: getParam('oauth_token'),\n      oauth_verifier: getParam('oauth_verifier')\n    };\n    ws.send(JSON.stringify(envelope));\n    console.log(name);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      </label>\n      <label>\n        Message:\n        <input\n          type=\"text\"\n          name=\"message\"\n          value={message}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Count:\n        <input type=\"text\" name=\"count\" value={count} onChange={handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  const [error, setError] = useState('');\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  const handleClick = () => {\n    console.log('rest');\n    ws.send('Twitter');\n  };\n  return (\n    <>\n      <button onClick={handleClick}>Twitter認証</button>\n      <div>{error}</div>\n    </>\n  );\n};\n\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  let render;\n  // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n  if (window.location.search.includes('verifier')) {\n    render = <InputForm />;\n    //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  }\n\n  // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n  return render;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}