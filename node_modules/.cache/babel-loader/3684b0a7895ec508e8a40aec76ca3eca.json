{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        flag = _useState2[0],\n        setFlag = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userData = _useState4[0],\n        setUserData = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        data = _useState6[0],\n        setData = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        name = _useState8[0],\n        setName = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setMessage = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        count = _useState12[0],\n        setCount = _useState12[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; //webSocketとの通信\n\n\n  const ws = new WebSocket('ws://localhost:5000/pipe'); // レンダー前にwsがopenした後にurl内のverifierを返す\n  // useEffect(() => {\n  //   ws.onopen = event => {\n  //     if (userData == false && window.location.search.includes('verifier')) {\n  //       console.log('useEffect');\n  //       setFlag(true);\n  //       console.log(typeof getParam('oauth_token'));\n  //       const envelope = {\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       //サーバへ送信\n  //       ws.send(JSON.stringify(envelope));\n  //     }\n  //   };\n  //   setUserData('true');\n  // });\n\n  function textInput() {\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Message:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"message\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Count:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"count\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n  function accessOauth(handleClick) {\n    return React.createElement(\"button\", {\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u9023\\u643A\\u30A2\\u30D7\\u30EA\\u8A8D\\u8A3C\");\n  } //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  } // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n\n  console.log(flag); //レンダー要素の切替\n\n  let render = flag ? React.createElement(\"textInput\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : React.createElement(\"accessOauth\", {\n    handleClick: this.state.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, render);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useForm","App","flag","setFlag","userData","setUserData","data","setData","name","setName","message","setMessage","count","setCount","register","handleSubmit","onSubmit","console","log","ws","WebSocket","textInput","accessOauth","handleClick","getParam","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","onmessage","e","includes","send","render","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWH,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACNI,IADM;AAAA,QACAC,OADA;;AAAA,qBAEmBL,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAENM,QAFM;AAAA,QAEIC,WAFJ;;AAAA,qBAGWP,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGNQ,IAHM;AAAA,QAGAC,OAHA;;AAAA,qBAIWT,QAAQ,CAAC,EAAD,CAJnB;AAAA;AAAA,QAINU,IAJM;AAAA,QAIAC,OAJA;;AAAA,qBAKiBX,QAAQ,CAAC,EAAD,CALzB;AAAA;AAAA,QAKNY,OALM;AAAA,QAKGC,UALH;;AAAA,sBAMab,QAAQ,CAAC,EAAD,CANrB;AAAA;AAAA,QAMNc,KANM;AAAA,QAMCC,QAND;;AAAA,mBAOsBb,OAAO,EAP7B;AAAA,QAOLc,QAPK,YAOLA,QAPK;AAAA,QAOKC,YAPL,YAOKA,YAPL;;AAQb,QAAMC,QAAQ,GAAGV,IAAI,IAAI;AACvBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,GAFD,CARa,CAWb;;;AACA,QAAMa,EAAE,GAAG,IAAIC,SAAJ,CAAc,0BAAd,CAAX,CAZa,CAab;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,SAAT,GAAqB;AACnB,WACE;AAAM,MAAA,QAAQ,EAAEN,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,GAAG,EAAEF,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,GAAG,EAAEA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,GAAG,EAAEA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,EAaE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAiBD;;AACD,WAASQ,WAAT,CAAqBC,WAArB,EAAkC;AAChC,WAAO;AAAQ,MAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACD,GApDY,CAqDb;;;AACA,WAASC,QAAT,CAAkBhB,IAAlB,EAAwBiB,GAAxB,EAA6B;AAC3B,QAAI,CAACA,GAAL,EAAUA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACVpB,IAAAA,IAAI,GAAGA,IAAI,CAACqB,OAAL,CAAa,SAAb,EAAwB,MAAxB,CAAP;AACA,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,SAASvB,IAAT,GAAgB,mBAA3B,CAAZ;AAAA,QACEwB,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWR,GAAX,CADZ;AAEA,QAAI,CAACO,OAAL,EAAc,OAAO,IAAP;AACd,QAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB,OAAO,EAAP;AACjB,WAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACD,GA9DY,CAgEb;;;AACAV,EAAAA,EAAE,CAACgB,SAAH,GAAeC,CAAC,IAAI;AAClBnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;;AACA,QAAIA,CAAC,CAAC9B,IAAF,CAAO+B,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AAClCX,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBQ,CAAC,CAAC9B,IAAzB;AACD,KAFD,MAEO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;AACA7B,MAAAA,OAAO,CAAC6B,CAAC,CAAC9B,IAAH,CAAP;AACD;AACF,GARD,CAjEa,CA0Eb;;;AACA,WAASiB,WAAT,GAAuB;AACrBN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,IAAAA,EAAE,CAACmB,IAAH,CAAQ,SAAR;AACD;;AACDrB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ,EA/Ea,CAiFb;;AACA,MAAIqC,MAAM,GAAGrC,IAAI,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,GAGf;AAAa,IAAA,WAAW,EAAE,KAAKsC,KAAL,CAAWjB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAKA,SAAO,0CAAGgB,MAAH,CAAP;AACD;;AAED,eAAetC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  //webSocketとの通信\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  // レンダー前にwsがopenした後にurl内のverifierを返す\n  // useEffect(() => {\n  //   ws.onopen = event => {\n  //     if (userData == false && window.location.search.includes('verifier')) {\n  //       console.log('useEffect');\n  //       setFlag(true);\n  //       console.log(typeof getParam('oauth_token'));\n  //       const envelope = {\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       //サーバへ送信\n  //       ws.send(JSON.stringify(envelope));\n  //     }\n  //   };\n  //   setUserData('true');\n  // });\n\n  function textInput() {\n    return (\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Name:\n          <input type=\"text\" name=\"name\" ref={register} />\n        </label>\n        <label>\n          Message:\n          <input type=\"text\" name=\"message\" ref={register} />\n        </label>\n        <label>\n          Count:\n          <input type=\"text\" name=\"count\" ref={register} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n  function accessOauth(handleClick) {\n    return <button onClick={handleClick}>連携アプリ認証</button>;\n  }\n  //url無いの特定の要素を持ってくるためのコード(コピペ)\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n  console.log(flag);\n\n  //レンダー要素の切替\n  let render = flag ? (\n    <textInput />\n  ) : (\n    <accessOauth handleClick={this.state.handleClick} />\n  );\n  return <>{render}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}