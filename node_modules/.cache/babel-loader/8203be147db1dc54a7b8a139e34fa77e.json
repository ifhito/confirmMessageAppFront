{"ast":null,"code":"import _objectSpread from \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport './styles.css';\nimport axios from 'axios';\n\nconst TwitterInputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        greetingStatus = _useState10[0],\n        displayGreeting = _useState10[1];\n\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data == 'error') {\n      setError('この名前は登録されています');\n    } else if (e.data.includes('name')) {\n      let url = window.location.href;\n      window.location.href = url.split('?')[0] + e.data;\n    }\n  };\n\n  const confirms = () => {\n    if (count == '') {\n      setError('空入力してください');\n      displayGreeting(false);\n    } else {\n      setError('');\n      displayGreeting(true);\n    }\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const confirmCount = () => {\n    if (count == '') {\n      setError('入力してください');\n    } else {\n      displayGreeting(true);\n    }\n  };\n\n  const handleSubmit = event => {\n    if (message == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const envelope = {\n        type: 'Twitter',\n        name: name,\n        message: message,\n        count: count,\n        oauth_token: getParam('oauth_token'),\n        oauth_verifier: getParam('oauth_verifier')\n      };\n      ws.send(JSON.stringify(envelope));\n      console.log(name);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306A\\u3069\\u8A2D\\u5B9A\\u30DA\\u30FC\\u30B8\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u78BA\\u8A8D\\u4EBA\\u6570\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3057\\u3087\\u3046\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, !greetingStatus ? React.createElement(React.Fragment, null, React.createElement(a.div, {\n    className: \"box\",\n    style: contentProp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\u4F55\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u6B32\\u3057\\u3044\\u304B?\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"count\",\n    value: count,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: confirms,\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Next\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, error))) : React.createElement(React.Fragment, null, React.createElement(a.div, {\n    className: \"box\",\n    style: contentProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Tweet\\u5185\\u5BB9\"), React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u6C7A\\u5B9A\"), React.createElement(\"button\", {\n    onClick: () => displayGreeting(a => !a),\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, error))))));\n}; //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        userData = _useState12[0],\n        setUserData = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        data = _useState14[0],\n        setData = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        index = _useState16[0],\n        set = _useState16[1];\n\n  const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  const pages = [({\n    style\n  }) => React.createElement(animated.div, {\n    style: _objectSpread({}, style, {\n      background: 'lightpink'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"A\"), ({\n    style\n  }) => React.createElement(animated.div, {\n    style: _objectSpread({}, style, {\n      background: 'lightblue'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"B\"), ({\n    style\n  }) => React.createElement(animated.div, {\n    style: _objectSpread({}, style, {\n      background: 'lightgreen'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"C\")];\n  const transitions = useTransition(index, p => p, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(100%,0,0)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translate3d(0%,0,0)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translate3d(-50%,0,0)'\n    }\n  }); // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  const handleClick = () => {\n    const envelope = {\n      oauthType: 'Twitter'\n    };\n    console.log('rest');\n    ws.send(JSON.stringify(envelope));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Twitter\\u78BA\\u304B\\u3081\\u3063\\u305F\\u30FC\"), React.createElement(\"div\", {\n    className: \"simple-trans-main\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, transitions.map(({\n    item,\n    props,\n    key\n  }) => {\n    const Page = pages[item];\n    return React.createElement(Page, {\n      key: key,\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    });\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\u3053\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306FTwitter\\u306E\\u767A\\u8A00\\u3092\\u3057\\u3066\\u3082\\u3044\\u3044\\u304B\\u3001\\u53CB\\u9054\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3046\\u30A2\\u30D7\\u30EA\\u3067\\u3059\\u3002\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"\\u30A2\\u30D7\\u30EA\\u306E\\u4F7F\\u3044\\u65B9\\u306F\\u4EE5\\u4E0B\\u3067\\u3059\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"\\u4E0B\\u306E\\u30A2\\u30A4\\u30B3\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066Twitter\\u306E\\u8A8D\\u8A3C\\u3092\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u4F55\\u4EBA\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3044\\u305F\\u3044\\u304B\\u3092\\u5165\\u529B\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"\\u5165\\u529B\\u5F8C\\u3001\\u30EA\\u30C0\\u30A4\\u30EC\\u30AF\\u30C8\\u3057\\u305F\\u30DA\\u30FC\\u30B8URL\\u3092\\u53CB\\u9054\\u306B\\u9001\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u53CB\\u9054\\u304C\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u78BA\\u8A8D\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"\\u8A2D\\u5B9A\\u3057\\u305F\\u4EBA\\u6570\\u5206\\u306E\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u3082\\u3089\\u3044\\u6B21\\u7B2C\\u3001Twitter\\u306B\\u81EA\\u52D5\\u7684\\u306B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u9001\\u3089\\u308C\\u308B\")), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\"));\n};\n\nconst BottonContent = () => {\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        message = _useState18[0],\n        setMessage = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        name = _useState20[0],\n        setName = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        flag = _useState22[0],\n        setFlag = _useState22[1];\n\n  const axios = require('axios');\n\n  const url = 'http://localhost:5000';\n  let nameId = getParam('name');\n  let time = getParam('time');\n  useEffect(async () => {\n    const params = {\n      name: nameId,\n      time: time\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/getData', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setName(res.data.name);\n    setMessage(res.data.message);\n  }, [setMessage, setName]);\n\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n\n    try {\n      await axios.get(url + '/sub', {\n        params\n      });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (flag == false) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, message), React.createElement(\"button\", {\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\"));\n  } else if (flag == true) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Thank you your corporation!! \"));\n  }\n};\n\nfunction App() {\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        flag = _useState24[0],\n        setFlag = _useState24[1];\n\n  let render; // if (window.location.search.includes('name')) {\n  //   render = <BottonContent />;\n  // }\n  // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n\n  if (window.location.search.includes('verifier')) {\n    render = React.createElement(TwitterInputForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }); //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  } else if (window.location.search.includes('name') && window.location.search.includes('time')) {\n    render = React.createElement(BottonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    });\n  } else {\n    render = React.createElement(AccessOauth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    });\n  } // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n\n\n  return render;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/App.js"],"names":["React","useState","useEffect","useContext","createContext","useSpring","animated","a","axios","TwitterInputForm","ws","WebSocket","name","setName","message","setMessage","count","setCount","error","setError","greetingStatus","displayGreeting","contentProps","opacity","marginLeft","contentProp","marginRight","onmessage","e","console","log","data","includes","url","window","location","href","split","confirms","handleChange","event","target","value","confirmCount","handleSubmit","preventDefault","envelope","type","oauth_token","getParam","oauth_verifier","send","JSON","stringify","replace","regex","RegExp","results","exec","decodeURIComponent","AccessOauth","userData","setUserData","setData","index","set","onClick","useCallback","state","pages","style","background","transitions","useTransition","p","from","transform","enter","leave","handleClick","oauthType","map","item","props","key","Page","BottonContent","flag","setFlag","require","nameId","time","params","res","get","App","render","search"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport './styles.css';\nimport axios from 'axios';\nconst TwitterInputForm = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const [error, setError] = useState('');\n  const [greetingStatus, displayGreeting] = useState(false);\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data == 'error') {\n      setError('この名前は登録されています');\n    } else if (e.data.includes('name')) {\n      let url = window.location.href;\n      window.location.href = url.split('?')[0] + e.data;\n    }\n  };\n  const confirms = () => {\n    if (count == '') {\n      setError('空入力してください');\n      displayGreeting(false);\n    } else {\n      setError('');\n      displayGreeting(true);\n    }\n  };\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const confirmCount = () => {\n    if (count == '') {\n      setError('入力してください');\n    } else {\n      displayGreeting(true);\n    }\n  };\n  const handleSubmit = event => {\n    if (message == '') {\n      setError('messageを入力してください');\n    } else {\n      event.preventDefault();\n      const envelope = {\n        type: 'Twitter',\n        name: name,\n        message: message,\n        count: count,\n        oauth_token: getParam('oauth_token'),\n        oauth_verifier: getParam('oauth_verifier')\n      };\n      ws.send(JSON.stringify(envelope));\n      console.log(name);\n    }\n  };\n  return (\n    <>\n      <h2>メッセージなど設定ページ</h2>\n      <p>メッセージと確認人数を設定しましょう</p>\n      <div className=\"container\">\n        {!greetingStatus ? (\n          <>\n            <a.div className=\"box\" style={contentProp}>\n              <p>何人に確認して欲しいか?</p>\n              <input\n                type=\"text\"\n                name=\"count\"\n                value={count}\n                onChange={handleChange}\n              />\n              <button onClick={confirms} className=\"button\">\n                Next\n              </button>\n              <div>{error}</div>\n            </a.div>\n          </>\n        ) : (\n          <>\n            <a.div className=\"box\" style={contentProps}>\n              <p>Tweet内容</p>\n              <div className=\"wrapper\">\n                <textarea\n                  name=\"message\"\n                  value={message}\n                  onChange={handleChange}\n                />\n                <button onClick={handleSubmit}>決定</button>\n                <button\n                  onClick={() => displayGreeting(a => !a)}\n                  className=\"button\"\n                >\n                  Prev\n                </button>\n                <div>{error}</div>\n              </div>\n            </a.div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\n//url無いの特定の要素を持ってくるためのコード(コピペ)\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  const [index, set] = useState(0);\n  const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  const pages = [\n    ({ style }) => (\n      <animated.div style={{ ...style, background: 'lightpink' }}>\n        A\n      </animated.div>\n    ),\n    ({ style }) => (\n      <animated.div style={{ ...style, background: 'lightblue' }}>\n        B\n      </animated.div>\n    ),\n    ({ style }) => (\n      <animated.div style={{ ...style, background: 'lightgreen' }}>\n        C\n      </animated.div>\n    )\n  ];\n  const transitions = useTransition(index, p => p, {\n    from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n    enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n    leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\n  });\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  const handleClick = () => {\n    const envelope = {\n      oauthType: 'Twitter'\n    };\n    console.log('rest');\n    ws.send(JSON.stringify(envelope));\n  };\n  return (\n    <>\n      <h2>Twitter確かめったー</h2>\n      <div className=\"simple-trans-main\" onClick={onClick}>\n        {transitions.map(({ item, props, key }) => {\n          const Page = pages[item];\n          return <Page key={key} style={props} />;\n        })}\n      </div>\n      <p>\n        このアプリケーションはTwitterの発言をしてもいいか、友達に確かめてもらうアプリです。\n      </p>\n      <p>アプリの使い方は以下です</p>\n      <ol>\n        <li>下のアイコンをクリックしてTwitterの認証をする</li>\n        <li>メッセージと何人に確かめてもらいたいかを入力する</li>\n        <li>入力後、リダイレクトしたページURLを友達に送る</li>\n        <li>友達がメッセージを確認する</li>\n        <li>\n          設定した人数分の人に確認してもらい次第、Twitterに自動的にメッセージが送られる\n        </li>\n      </ol>\n      <button onClick={handleClick}>Twitter認証</button>\n    </>\n  );\n};\n\nconst BottonContent = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [flag, setFlag] = useState(false);\n  const axios = require('axios');\n  const url = 'http://localhost:5000';\n  let nameId = getParam('name');\n  let time = getParam('time');\n  useEffect(async () => {\n    const params = {\n      name: nameId,\n      time: time\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/getData', { params });\n    } catch (error) {\n      console.log(error);\n    }\n    setName(res.data.name);\n    setMessage(res.data.message);\n  }, [setMessage, setName]);\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n    try {\n      await axios.get(url + '/sub', { params });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (flag == false) {\n    return (\n      <>\n        <p>{name}</p>\n        <p>{message}</p>\n        <button onClick={handleClick}>承認</button>\n      </>\n    );\n  } else if (flag == true) {\n    return (\n      <>\n        <p>Thank you your corporation!! </p>\n      </>\n    );\n  }\n};\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  let render;\n  // if (window.location.search.includes('name')) {\n  //   render = <BottonContent />;\n  // }\n  // webSocketとの通信;\n  // レンダー前にwsがopenした後にurl内のverifierを返す;\n  if (window.location.search.includes('verifier')) {\n    render = <TwitterInputForm />;\n    //サーバへ送信\n    // ws.send(JSON.stringify(envelope));\n  } else if (\n    window.location.search.includes('name') &&\n    window.location.search.includes('time')\n  ) {\n    render = <BottonContent />;\n  } else {\n    render = <AccessOauth />;\n  }\n\n  // //レンダー要素の切替\n  // let render = flag ? <InputForm /> : <AccessOauth />;\n  return render;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}