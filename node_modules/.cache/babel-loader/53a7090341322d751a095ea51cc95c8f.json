{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        flag = _useState2[0],\n        setFlag = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userData = _useState4[0],\n        setUserData = _useState4[1]; //webSocketとの通信\n\n\n  const ws = new WebSocket('ws://localhost:5000/pipe'); // レンダー前にwsがopenした後にurl内のverifierを返す\n\n  useEffect(() => {\n    ws.onopen = event => {\n      if (window.location.search.includes('verifier')) {\n        setFlag(true);\n        ws.send([getParam('oauth_verifier'), getParam['oauth_token']]);\n      }\n    };\n\n    setUserData('true');\n  }); //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  let data = 'test'; // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      data = e.data;\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n\n  console.log(flag); //レンダー要素の切替\n\n  let render = flag ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, data) : React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\\u9023\\u643A\\u30A2\\u30D7\\u30EA\\u8A8D\\u8A3C\");\n  return React.createElement(React.Fragment, null, render);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/tweet-ref/src/App.js"],"names":["React","useState","useEffect","App","flag","setFlag","userData","setUserData","ws","WebSocket","onopen","event","window","location","search","includes","send","getParam","name","url","href","replace","regex","RegExp","results","exec","decodeURIComponent","data","onmessage","e","console","log","handleClick","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWF,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACNG,IADM;AAAA,QACAC,OADA;;AAAA,qBAEmBJ,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAENK,QAFM;AAAA,QAEIC,WAFJ,kBAGb;;;AACA,QAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,0BAAd,CAAX,CAJa,CAKb;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,EAAE,CAACE,MAAH,GAAYC,KAAK,IAAI;AACnB,UAAIC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,QAAvB,CAAgC,UAAhC,CAAJ,EAAiD;AAC/CV,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,QAAAA,EAAE,CAACQ,IAAH,CAAQ,CAACC,QAAQ,CAAC,gBAAD,CAAT,EAA6BA,QAAQ,CAAC,aAAD,CAArC,CAAR;AACD;AACF,KALD;;AAMAV,IAAAA,WAAW,CAAC,MAAD,CAAX;AACD,GARQ,CAAT,CANa,CAgBb;;AACA,WAASU,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAC3B,QAAI,CAACA,GAAL,EAAUA,GAAG,GAAGP,MAAM,CAACC,QAAP,CAAgBO,IAAtB;AACVF,IAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,SAAb,EAAwB,MAAxB,CAAP;AACA,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,SAASL,IAAT,GAAgB,mBAA3B,CAAZ;AAAA,QACEM,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWN,GAAX,CADZ;AAEA,QAAI,CAACK,OAAL,EAAc,OAAO,IAAP;AACd,QAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB,OAAO,EAAP;AACjB,WAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACD;;AAED,MAAIM,IAAI,GAAG,MAAX,CA3Ba,CA4Bb;;AACAnB,EAAAA,EAAE,CAACoB,SAAH,GAAeC,CAAC,IAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,QAAIA,CAAC,CAACF,IAAF,CAAOZ,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AAClCH,MAAAA,MAAM,CAACC,QAAP,CAAgBO,IAAhB,GAAuBS,CAAC,CAACF,IAAzB;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAGE,CAAC,CAACF,IAAT;AACD;AACF,GAPD,CA7Ba,CAqCb;;;AACA,WAASK,WAAT,GAAuB;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAvB,IAAAA,EAAE,CAACQ,IAAH,CAAQ,SAAR;AACD;;AACDc,EAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ,EA1Ca,CA4Cb;;AACA,MAAI6B,MAAM,GAAG7B,IAAI,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMuB,IAAN,CADe,GAGf;AAAQ,IAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHF;AAKA,SAAO,0CAAGC,MAAH,CAAP;AACD;;AAED,eAAe9B,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [flag, setFlag] = useState(false);\n  const [userData, setUserData] = useState('');\n  //webSocketとの通信\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  // レンダー前にwsがopenした後にurl内のverifierを返す\n  useEffect(() => {\n    ws.onopen = event => {\n      if (window.location.search.includes('verifier')) {\n        setFlag(true);\n        ws.send([getParam('oauth_verifier'), getParam['oauth_token']]);\n      }\n    };\n    setUserData('true');\n  });\n\n  //url無いの特定の要素を持ってくるためのコード(コピペ)\n  function getParam(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  let data = 'test';\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      data = e.data;\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  function handleClick() {\n    console.log('rest');\n    ws.send('Twitter');\n  }\n  console.log(flag);\n\n  //レンダー要素の切替\n  let render = flag ? (\n    <div>{data}</div>\n  ) : (\n    <button onClick={handleClick}>連携アプリ認証</button>\n  );\n  return <>{render}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}