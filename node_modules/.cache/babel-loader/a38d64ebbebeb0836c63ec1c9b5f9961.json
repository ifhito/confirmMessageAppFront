{"ast":null,"code":"import _slicedToArray from \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/AppTest.js\";\nimport React from 'react';\nimport './css/style.css';\nimport { useState, useEffect, useContext, createContext, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport useReactRouter from 'use-react-router';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\n\nconst TwitterInputForm = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        greetingStatus = _useState10[0],\n        displayGreeting = _useState10[1];\n\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  }); //   ws.onmessage = e => {\n  //     console.log(e);\n  //     if (e.data == 'error') {\n  //       setError('この名前は登録されています');\n  //     } else if (e.data.includes('name')) {\n  //       let url = window.location.href;\n  //       window.location.href = url.split('?')[0] + e.data;\n  //     }\n  //   };\n\n  const confirms = () => {\n    if (count == '') {\n      setError('空です。入力してください');\n      displayGreeting(false);\n    } else {\n      setError('');\n      displayGreeting(true);\n    }\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'message':\n        setMessage(event.target.value);\n        break;\n\n      case 'count':\n        setCount(event.target.value);\n        break;\n\n      default:\n        console.log('key not found');\n    }\n  };\n\n  const confirmCount = () => {\n    if (count == '') {\n      setError('入力してください');\n    } else {\n      displayGreeting(true);\n    }\n  }; //   const handleSubmit = event => {\n  //     if (message == '') {\n  //       setError('messageを入力してください');\n  //     } else {\n  //       event.preventDefault();\n  //       const envelope = {\n  //         type: 'Twitter',\n  //         name: name,\n  //         message: message,\n  //         count: count,\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       ws.send(JSON.stringify(envelope));\n  //       console.log(name);\n  //     }\n  //   };\n\n\n  return React.createElement(React.Fragment, null, \"test\");\n}; //url無いの特定の要素を持ってくるためのコード(コピペ)\n\n\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        userData = _useState12[0],\n        setUserData = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        data = _useState14[0],\n        setData = _useState14[1]; // const pages = [\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightpink' }}>\n  //       A\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightblue' }}>\n  //       B\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightgreen' }}>\n  //       C\n  //     </animated.div>\n  //   )\n  // ];\n  // const [index, set] = useState(0);\n  // const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  // const transitions = useTransition(index, p => p, {\n  //   from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n  //   enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n  //   leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\n  // });\n  // const Text = ({ children, offset, pos, start, end }) => {\n  //   const [transform] = useState(() =>\n  //     offset\n  //       .interpolate({\n  //         range: [start, end],\n  //         output: [100, 0],\n  //         extrapolate: 'clamp'\n  //       })\n  //       .interpolate(s => `translate3d(${s}px,0,0)`)\n  //   );\n  //   const [opacity] = useState(() => offset.interpolate([start, end], [0, 1]));\n  //   return (\n  //     <a.div\n  //       style={{\n  //         position: 'absolute',\n  //         left: 0,\n  //         top: `${pos * 100}vh`,\n  //         transform,\n  //         opacity\n  //       }}\n  //     >\n  //       {children}\n  //     </a.div>\n  //   );\n  // };\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n\n\n  ws.onmessage = e => {\n    console.log(e);\n\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  }; //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n\n\n  const handleClick = async () => {\n    try {\n      await axios.get('http://0.0.0.0:5000' + '/oath');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Twitter\\u78BA\\u304B\\u3081\\u3063\\u305F\\u30FC\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"\\u3053\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306FTwitter\\u306E\\u767A\\u8A00\\u3092\\u3057\\u3066\\u3082\\u3044\\u3044\\u304B\\u3001\\u53CB\\u9054\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3046\\u30A2\\u30D7\\u30EA\\u3067\\u3059\\u3002\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\u30A2\\u30D7\\u30EA\\u306E\\u4F7F\\u3044\\u65B9\\u306F\\u4EE5\\u4E0B\\u3067\\u3059\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"\\u4E0B\\u306E\\u30A2\\u30A4\\u30B3\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066Twitter\\u306E\\u8A8D\\u8A3C\\u3092\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3068\\u4F55\\u4EBA\\u306B\\u78BA\\u304B\\u3081\\u3066\\u3082\\u3089\\u3044\\u305F\\u3044\\u304B\\u3092\\u5165\\u529B\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"\\u5165\\u529B\\u5F8C\\u3001\\u30EA\\u30C0\\u30A4\\u30EC\\u30AF\\u30C8\\u3057\\u305F\\u30DA\\u30FC\\u30B8URL\\u3092\\u53CB\\u9054\\u306B\\u9001\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"\\u53CB\\u9054\\u304C\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u78BA\\u8A8D\\u3059\\u308B\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\u8A2D\\u5B9A\\u3057\\u305F\\u4EBA\\u6570\\u5206\\u306E\\u4EBA\\u306B\\u78BA\\u8A8D\\u3057\\u3066\\u3082\\u3089\\u3044\\u6B21\\u7B2C\\u3001Twitter\\u306B\\u81EA\\u52D5\\u7684\\u306B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u9001\\u3089\\u308C\\u308B\")), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Twitter\\u8A8D\\u8A3C\"));\n};\n\nconst BottonContent = () => {\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        message = _useState16[0],\n        setMessage = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        name = _useState18[0],\n        setName = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        flag = _useState20[0],\n        setFlag = _useState20[1];\n\n  const axios = require('axios');\n\n  const url = 'http://localhost:5000';\n  let nameId = getParam('name');\n  let time = getParam('time');\n  useEffect(async () => {\n    const params = {\n      name: nameId,\n      time: time\n    };\n    console.log(params);\n    let res;\n\n    try {\n      res = await axios.get(url + '/getData', {\n        params\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setName(res.data.name);\n    setMessage(res.data.message);\n  }, [setMessage, setName]);\n\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n\n    try {\n      await axios.get(url + '/sub', {\n        params\n      });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (flag == false) {\n    return React.createElement(\"div\", {\n      className: \"mouses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mouses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, message), React.createElement(\"button\", {\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\u627F\\u8A8D\"));\n  } else if (flag == true) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Thank you your corporation!! \"));\n  }\n};\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: AccessOauth,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/twitterForm\",\n    component: TwitterInputForm,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }))); //   const [flag, setFlag] = useState(false);\n  //   let render;\n  //   // if (window.location.search.includes('name')) {\n  //   //   render = <BottonContent />;\n  //   // }\n  //   // webSocketとの通信;\n  //   // レンダー前にwsがopenした後にurl内のverifierを返す;\n  //   if (window.location.search.includes('verifier')) {\n  //     render = <TwitterInputForm />;\n  //     //サーバへ送信\n  //     // ws.send(JSON.stringify(envelope));\n  //   } else if (\n  //     window.location.search.includes('name') &&\n  //     window.location.search.includes('time')\n  //   ) {\n  //     render = <BottonContent />;\n  //   } else {\n  //     render = <AccessOauth />;\n  //   }\n  //   // //レンダー要素の切替\n  //   // let render = flag ? <InputForm /> : <AccessOauth />;\n  //   return render;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.seki/Documents/twitter_post/confirmMessageApp/tweet-ref/src/AppTest.js"],"names":["React","useState","useEffect","useContext","createContext","useCallback","BrowserRouter","Router","Route","Switch","useReactRouter","useSpring","useTransition","animated","a","axios","TwitterInputForm","name","setName","message","setMessage","count","setCount","error","setError","greetingStatus","displayGreeting","contentProps","opacity","marginLeft","contentProp","marginRight","confirms","handleChange","event","target","value","console","log","confirmCount","getParam","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","AccessOauth","ws","WebSocket","userData","setUserData","data","setData","onmessage","e","includes","handleClick","get","BottonContent","flag","setFlag","require","nameId","time","params","res","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/style.css';\nimport {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback\n} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport useReactRouter from 'use-react-router';\nimport { useSpring, useTransition, animated as a } from 'react-spring';\nimport axios from 'axios';\nconst TwitterInputForm = () => {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState('');\n  const [error, setError] = useState('');\n  const [greetingStatus, displayGreeting] = useState(false);\n  const contentProps = useSpring({\n    opacity: greetingStatus ? 1 : 0,\n    marginLeft: greetingStatus ? 0 : 1000\n  });\n\n  const contentProp = useSpring({\n    opacity: greetingStatus ? 0 : 1,\n    marginRight: greetingStatus ? 2000 : 0\n  });\n  //   ws.onmessage = e => {\n  //     console.log(e);\n  //     if (e.data == 'error') {\n  //       setError('この名前は登録されています');\n  //     } else if (e.data.includes('name')) {\n  //       let url = window.location.href;\n  //       window.location.href = url.split('?')[0] + e.data;\n  //     }\n  //   };\n  const confirms = () => {\n    if (count == '') {\n      setError('空です。入力してください');\n      displayGreeting(false);\n    } else {\n      setError('');\n      displayGreeting(true);\n    }\n  };\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'message':\n        setMessage(event.target.value);\n        break;\n      case 'count':\n        setCount(event.target.value);\n        break;\n      default:\n        console.log('key not found');\n    }\n  };\n  const confirmCount = () => {\n    if (count == '') {\n      setError('入力してください');\n    } else {\n      displayGreeting(true);\n    }\n  };\n  //   const handleSubmit = event => {\n  //     if (message == '') {\n  //       setError('messageを入力してください');\n  //     } else {\n  //       event.preventDefault();\n  //       const envelope = {\n  //         type: 'Twitter',\n  //         name: name,\n  //         message: message,\n  //         count: count,\n  //         oauth_token: getParam('oauth_token'),\n  //         oauth_verifier: getParam('oauth_verifier')\n  //       };\n  //       ws.send(JSON.stringify(envelope));\n  //       console.log(name);\n  //     }\n  //   };\n  return <>test</>;\n};\n\n//url無いの特定の要素を持ってくるためのコード(コピペ)\nconst getParam = (name, url) => {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\nconst AccessOauth = () => {\n  const ws = new WebSocket('ws://localhost:5000/pipe');\n  const [userData, setUserData] = useState('');\n  const [data, setData] = useState('');\n  // const pages = [\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightpink' }}>\n  //       A\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightblue' }}>\n  //       B\n  //     </animated.div>\n  //   ),\n  //   ({ style }) => (\n  //     <animated.div style={{ ...style, background: 'lightgreen' }}>\n  //       C\n  //     </animated.div>\n  //   )\n  // ];\n  // const [index, set] = useState(0);\n  // const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  // const transitions = useTransition(index, p => p, {\n  //   from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n  //   enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n  //   leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' }\n  // });\n  // const Text = ({ children, offset, pos, start, end }) => {\n  //   const [transform] = useState(() =>\n  //     offset\n  //       .interpolate({\n  //         range: [start, end],\n  //         output: [100, 0],\n  //         extrapolate: 'clamp'\n  //       })\n  //       .interpolate(s => `translate3d(${s}px,0,0)`)\n  //   );\n  //   const [opacity] = useState(() => offset.interpolate([start, end], [0, 1]));\n  //   return (\n  //     <a.div\n  //       style={{\n  //         position: 'absolute',\n  //         left: 0,\n  //         top: `${pos * 100}vh`,\n  //         transform,\n  //         opacity\n  //       }}\n  //     >\n  //       {children}\n  //     </a.div>\n  //   );\n  // };\n  // サーバー側からメッセージが送られてきた際に受け取り、関数を発動する(Twitterの認証用URLに飛ぶため)\n  ws.onmessage = e => {\n    console.log(e);\n    if (e.data.includes('oauth_token')) {\n      window.location.href = e.data;\n    } else {\n      console.log(e);\n      setData(e.data);\n    }\n  };\n  //クリックした時(今回は文字をbuttonをクリックしたらサーバーにTwitterのもじが送られる)\n  const handleClick = async () => {\n    try {\n      await axios.get('http://0.0.0.0:5000' + '/oath');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <h2>Twitter確かめったー</h2>\n      {/* <div className=\"simple-trans-main\" onClick={onClick}>\n        {transitions.map(({ item, props, key }) => {\n          const Page = pages[item];\n          return <Page key={key} style={props} />;\n        })}\n      </div> */}\n      <p>\n        このアプリケーションはTwitterの発言をしてもいいか、友達に確かめてもらうアプリです。\n      </p>\n      <p>アプリの使い方は以下です</p>\n      <ol>\n        <li>下のアイコンをクリックしてTwitterの認証をする</li>\n        <li>メッセージと何人に確かめてもらいたいかを入力する</li>\n        <li>入力後、リダイレクトしたページURLを友達に送る</li>\n        <li>友達がメッセージを確認する</li>\n        <li>\n          設定した人数分の人に確認してもらい次第、Twitterに自動的にメッセージが送られる\n        </li>\n      </ol>\n      <button onClick={handleClick}>Twitter認証</button>\n    </>\n  );\n};\n\nconst BottonContent = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [flag, setFlag] = useState(false);\n  const axios = require('axios');\n  const url = 'http://localhost:5000';\n  let nameId = getParam('name');\n  let time = getParam('time');\n  useEffect(async () => {\n    const params = {\n      name: nameId,\n      time: time\n    };\n    console.log(params);\n    let res;\n    try {\n      res = await axios.get(url + '/getData', { params });\n    } catch (error) {\n      console.log(error);\n    }\n    setName(res.data.name);\n    setMessage(res.data.message);\n  }, [setMessage, setName]);\n  const handleClick = async () => {\n    console.log('rest');\n    const params = {\n      nameId: getParam('name'),\n      time: getParam('time')\n    };\n    try {\n      await axios.get(url + '/sub', { params });\n      setFlag(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (flag == false) {\n    return (\n      <div className=\"mouses\">\n        <p className=\"mouses\">{name}</p>\n        <p>{message}</p>\n        <button onClick={handleClick}>承認</button>\n      </div>\n    );\n  } else if (flag == true) {\n    return (\n      <>\n        <p>Thank you your corporation!! </p>\n      </>\n    );\n  }\n};\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={AccessOauth} exact />\n        <Route path=\"/twitterForm\" component={TwitterInputForm} exact />\n      </Switch>\n    </Router>\n  );\n  //   const [flag, setFlag] = useState(false);\n  //   let render;\n  //   // if (window.location.search.includes('name')) {\n  //   //   render = <BottonContent />;\n  //   // }\n  //   // webSocketとの通信;\n  //   // レンダー前にwsがopenした後にurl内のverifierを返す;\n  //   if (window.location.search.includes('verifier')) {\n  //     render = <TwitterInputForm />;\n  //     //サーバへ送信\n  //     // ws.send(JSON.stringify(envelope));\n  //   } else if (\n  //     window.location.search.includes('name') &&\n  //     window.location.search.includes('time')\n  //   ) {\n  //     render = <BottonContent />;\n  //   } else {\n  //     render = <AccessOauth />;\n  //   }\n\n  //   // //レンダー要素の切替\n  //   // let render = flag ? <InputForm /> : <AccessOauth />;\n  //   return render;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}